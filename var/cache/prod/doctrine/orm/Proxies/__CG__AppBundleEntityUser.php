<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \AppBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'accountNonExpired', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'accountNonLocked', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'credentialsNonExpired', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'enabled', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'registrationDate', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'actionToken', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'comments', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'tasks', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'myTasks', 'roles'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'accountNonExpired', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'accountNonLocked', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'credentialsNonExpired', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'enabled', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'registrationDate', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'actionToken', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'comments', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'tasks', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'myTasks', 'roles'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function isManager()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isManager', []);

        return parent::isManager();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeveloper()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeveloper', []);

        return parent::isDeveloper();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($comparisonRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$comparisonRole]);

        return parent::hasRole($comparisonRole);
    }

    /**
     * {@inheritDoc}
     */
    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEqualTo', [$user]);

        return parent::isEqualTo($user);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setAccountNonExpired($accountNonExpired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccountNonExpired', [$accountNonExpired]);

        return parent::setAccountNonExpired($accountNonExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountNonExpired', []);

        return parent::getAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccountNonLocked($accountNonLocked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccountNonLocked', [$accountNonLocked]);

        return parent::setAccountNonLocked($accountNonLocked);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountNonLocked', []);

        return parent::getAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentialsNonExpired($credentialsNonExpired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentialsNonExpired', [$credentialsNonExpired]);

        return parent::setCredentialsNonExpired($credentialsNonExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredentialsNonExpired', []);

        return parent::getCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationDate($registrationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationDate', [$registrationDate]);

        return parent::setRegistrationDate($registrationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationDate', []);

        return parent::getRegistrationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setActionToken($actionToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActionToken', [$actionToken]);

        return parent::setActionToken($actionToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getActionToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActionToken', []);

        return parent::getActionToken();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\AppBundle\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\AppBundle\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRolesCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolesCount', []);

        return parent::getRolesCount();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\AppBundle\Entity\Comment $comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\AppBundle\Entity\Comment $comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addTask(\AppBundle\Entity\Task $task)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTask', [$task]);

        return parent::addTask($task);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTask(\AppBundle\Entity\Task $task)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTask', [$task]);

        return parent::removeTask($task);
    }

    /**
     * {@inheritDoc}
     */
    public function getTasks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTasks', []);

        return parent::getTasks();
    }

    /**
     * {@inheritDoc}
     */
    public function addMyTask(\AppBundle\Entity\Task $myTask)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMyTask', [$myTask]);

        return parent::addMyTask($myTask);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMyTask(\AppBundle\Entity\Task $myTask)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMyTask', [$myTask]);

        return parent::removeMyTask($myTask);
    }

    /**
     * {@inheritDoc}
     */
    public function getMyTasks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMyTasks', []);

        return parent::getMyTasks();
    }

}
